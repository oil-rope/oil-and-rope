name: (Prod) Django Checker

on:
  push:
    branches:
      - master
      - develop
      - release/*
  pull_request:
    branches:
      - master
      - develop

jobs:
  python:
    name: Python with PostgreSQL & Redis
    runs-on: ubuntu-latest
    env:
      # NOTE: This is needed for coverage on HTML
      DEBUG_TEMPLATE: True
      DJANGO_SETTINGS_MODULE: oilandrope.settings
      DB_NAME: oilandrope
      DB_USER: postgres
      DB_PASSWORD: p4ssw0rd@

    # Set up Postgres and Redis
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: p4ssw0rd@
          POSTGRES_USER: postgres
          POSTGRES_DB: oilandrope
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis
        ports:
          - 6379:6379

    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.9', '3.10']

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Poetry cache
        uses: actions/cache@v3
        id: cache-poetry
        with:
          path: ~/.cache/pypoetry
          key: poetry-cache-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install poetry
        run: |
          pip install poetry

      - name: Install dependencies
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: |
          poetry install

      - name: Lint with flake8
        run: |
          poetry run flake8 --config=setup.cfg

      - name: Check iSort
        run: |
          poetry run isort . --check --diff

      # Since `poetry run ./manage.py` does not cover all files (maybe because there are *pre-pytest* reached) we user
      # `coverage run` in order to get a full coverage (difference is almost 10%)
      - name: Pytest
        run: |
          cp .env.example .env
          poetry run coverage run ./manage.py test -- --no-cov
          poetry run coverage report

      - name: Django Check
        run: |
          poetry run ./manage.py migrate
          poetry run ./manage.py check

      - name: Updating Codecov (coverage)
        if: ${{ success() }}
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          file: ./coverage.xml
          verbose: true