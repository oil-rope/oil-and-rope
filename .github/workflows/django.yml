name: (Prod) Django Checker

on:
  push:
    branches:
      - master
      - develop
      - release/*
  pull_request:
    branches:
      - master
      - develop

jobs:
  python:
    name: Python with PostgreSQL & Redis
    runs-on: ubuntu-latest
    env:
      # NOTE: This is needed for coverage on HTML
      DEBUG_TEMPLATE: True
      DJANGO_SETTINGS_MODULE: oilandrope.settings
      DB_NAME: oilandrope
      DB_USER: postgres
      DB_PASSWORD: p4ssw0rd@

    # Set up Postgres and Redis
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: p4ssw0rd@
          POSTGRES_USER: postgres
          POSTGRES_DB: oilandrope
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis
        ports:
          - 6379:6379

    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.9']

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y firefox-geckodriver
          python -m pip install --upgrade pip poetry
          poetry export --dev --without-hashes -f requirements.txt -o /tmp/requirements.txt
          pip install -r /tmp/requirements.txt

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 --config=setup.cfg

      - name: Check iSort
        run: |
          pip install -U isort
          isort . --check --diff

      - name: Pytest
        run: |
          cp .env.example .env
          coverage run manage.py test
          coverage xml

      - name: Django Check
        run: |
          python manage.py migrate
          python manage.py check

      - name: Updating Codecov (coverage)
        if: ${{ success() }}
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          file: ./coverage.xml
          verbose: true