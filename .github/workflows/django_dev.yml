name: (Dev) Django Checker

on:
  push:
    branches:
      - feature/*
      - bugfix/*
      - hotfix/*

jobs:
  python-build-without-postgres:
    name: Python Build
    runs-on: ubuntu-latest
    env:
      # NOTE: This is needed for coverage on HTML
      DEBUG_TEMPLATE: True
      DJANGO_SETTINGS_MODULE: oilandrope.dev_settings

    # Redis
    services:
      redis:
        image: redis
        ports:
          - 6379:6379

    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.10']

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # NOTE: For some reason when using `poetry run` instead of `coverage run ./manage.py` some files are reached resulting
      # in incomplete coverage. In order to use `coverage run` we need to export dependencies all the time, so this is why
      # we are caching.
      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          pip install poetry
          poetry export --dev --without-hashes --output=./requirements.txt
          pip install -r ./requirements.txt

      - name: Lint with flake8
        run: |
          python -m flake8 --config=setup.cfg

      - name: Check iSort
        run: |
           isort . --check --diff

      - name: Pytest
        run: |
          cp .env.example .env
          coverage run ./manage.py test -- --no-cov
          coverage xml

      - name: Django Check
        run: |
          python ./manage.py migrate
          python ./manage.py check
