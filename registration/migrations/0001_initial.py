# Generated by Django 3.1.1 on 2020-09-29 10:31

import ckeditor.fields
import common.files.upload
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_premium', models.BooleanField(default=False, verbose_name='Premium user')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_created_at', models.DateTimeField(auto_now_add=True, verbose_name='Entry created at')),
                ('entry_updated_at', models.DateTimeField(auto_now=True, verbose_name='Entry updated at')),
                ('bio', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Biography')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Birthday')),
                ('language', models.CharField(choices=[('af', 'Afrikaans'), ('sq', 'Albanian'), ('ar-dz', 'Algerian Arabic'), ('ar', 'Arabic'), ('es-ar', 'Argentinian Spanish'), ('hy', 'Armenian'), ('ast', 'Asturian'), ('en-au', 'Australian English'), ('az', 'Azerbaijani'), ('eu', 'Basque'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('bs', 'Bosnian'), ('pt-br', 'Brazilian Portuguese'), ('br', 'Breton'), ('en-gb', 'British English'), ('bg', 'Bulgarian'), ('my', 'Burmese'), ('ca', 'Catalan'), ('es-co', 'Colombian Spanish'), ('hr', 'Croatian'), ('cs', 'Czech'), ('da', 'Danish'), ('nl', 'Dutch'), ('en', 'English'), ('eo', 'Esperanto'), ('et', 'Estonian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('gl', 'Galician'), ('ka', 'Georgian'), ('de', 'German'), ('el', 'Greek'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hu', 'Hungarian'), ('is', 'Icelandic'), ('io', 'Ido'), ('ig', 'Igbo'), ('id', 'Indonesian'), ('ia', 'Interlingua'), ('ga', 'Irish'), ('it', 'Italian'), ('ja', 'Japanese'), ('kab', 'Kabyle'), ('kn', 'Kannada'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('ko', 'Korean'), ('ky', 'Kyrgyz'), ('lv', 'Latvian'), ('lt', 'Lithuanian'), ('dsb', 'Lower Sorbian'), ('lb', 'Luxembourgish'), ('mk', 'Macedonian'), ('ml', 'Malayalam'), ('mr', 'Marathi'), ('es-mx', 'Mexican Spanish'), ('mn', 'Mongolian'), ('ne', 'Nepali'), ('es-ni', 'Nicaraguan Spanish'), ('nb', 'Norwegian Bokm√•l'), ('nn', 'Norwegian Nynorsk'), ('os', 'Ossetic'), ('fa', 'Persian'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pa', 'Punjabi'), ('ro', 'Romanian'), ('ru', 'Russian'), ('gd', 'Scottish Gaelic'), ('sr', 'Serbian'), ('sr-latn', 'Serbian Latin'), ('zh-hans', 'Simplified Chinese'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('es', 'Spanish'), ('sw', 'Swahili'), ('sv', 'Swedish'), ('tg', 'Tajik'), ('ta', 'Tamil'), ('tt', 'Tatar'), ('te', 'Telugu'), ('th', 'Thai'), ('zh-hant', 'Traditional Chinese'), ('tr', 'Turkish'), ('tk', 'Turkmen'), ('udm', 'Udmurt'), ('uk', 'Ukrainian'), ('hsb', 'Upper Sorbian'), ('ur', 'Urdu'), ('uz', 'Uzbek'), ('es-ve', 'Venezuelan Spanish'), ('vi', 'Vietnamese'), ('cy', 'Welsh')], default='en', max_length=30, verbose_name='Language')),
                ('alias', models.CharField(blank=True, max_length=30, null=True, verbose_name='Alias')),
                ('web', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('image', models.ImageField(blank=True, null=True, upload_to=common.files.upload.default_upload_to, verbose_name='Avatar')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
                'ordering': ['user__username', 'user__first_name'],
            },
        ),
    ]
