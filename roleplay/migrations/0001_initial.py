# Generated by Django 3.2.8 on 2021-11-05 12:11

import common.files.upload
import common.validators.files
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('chat', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_created_at', models.DateTimeField(auto_now_add=True, verbose_name='Entry created at')),
                ('entry_updated_at', models.DateTimeField(auto_now=True, verbose_name='Entry updated at')),
                ('name', models.CharField(max_length=25, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('domain_type', models.PositiveSmallIntegerField(choices=[(0, 'domain'), (1, 'subdomain')], default=0, verbose_name='domain type')),
                ('image', models.ImageField(blank=True, null=True, upload_to=common.files.upload.default_upload_to, verbose_name='image')),
            ],
            options={
                'verbose_name': 'domain',
                'verbose_name_plural': 'domains',
                'ordering': ['name', '-entry_created_at', '-entry_updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_created_at', models.DateTimeField(auto_now_add=True, verbose_name='Entry created at')),
                ('entry_updated_at', models.DateTimeField(auto_now=True, verbose_name='Entry updated at')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('site_type', models.PositiveSmallIntegerField(choices=[(0, 'house'), (1, 'town'), (2, 'village'), (3, 'city'), (4, 'metropolis'), (5, 'forest'), (6, 'hills'), (7, 'mountains'), (8, 'mines'), (9, 'river'), (10, 'sea'), (11, 'desert'), (12, 'tundra'), (13, 'unusual'), (14, 'island'), (15, 'country'), (16, 'continent'), (17, 'world'), (18, 'ocean')], default=1, verbose_name='site type')),
                ('image', models.ImageField(blank=True, null=True, upload_to=common.files.upload.default_upload_to, validators=[common.validators.files.validate_file_size], verbose_name='image')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='places_owned', to=settings.AUTH_USER_MODEL, verbose_name='owner')),
                ('parent_site', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children_sites', to='roleplay.place', verbose_name='parent site')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='places', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'place',
                'verbose_name_plural': 'places',
                'ordering': ['name', '-entry_created_at', '-entry_updated_at'],
            },
        ),
        migrations.CreateModel(
            name='PlayerInSession',
            fields=[
                ('entry_created_at', models.DateTimeField(auto_now_add=True, verbose_name='Entry created at')),
                ('entry_updated_at', models.DateTimeField(auto_now=True, verbose_name='Entry updated at')),
                ('id', models.AutoField(db_index=True, primary_key=True, serialize=False, verbose_name='id')),
                ('is_game_master', models.BooleanField(default=False, verbose_name='game master')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_in_session_set', to=settings.AUTH_USER_MODEL, verbose_name='player')),
            ],
            options={
                'verbose_name': 'player in session',
                'verbose_name_plural': 'players in sessions',
            },
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_created_at', models.DateTimeField(auto_now_add=True, verbose_name='Entry created at')),
                ('entry_updated_at', models.DateTimeField(auto_now=True, verbose_name='Entry updated at')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('strength', models.SmallIntegerField(default=0, verbose_name='strength')),
                ('dexterity', models.SmallIntegerField(default=0, verbose_name='dexterity')),
                ('constitution', models.SmallIntegerField(default=0, verbose_name='constitution')),
                ('intelligence', models.SmallIntegerField(default=0, verbose_name='intelligence')),
                ('wisdom', models.SmallIntegerField(default=0, verbose_name='wisdom')),
                ('charisma', models.SmallIntegerField(default=0, verbose_name='charisma')),
                ('affected_by_armor', models.BooleanField(default=True, help_text='declares if this race is affected by armor penalties', verbose_name='affected by armor')),
                ('image', models.ImageField(blank=True, null=True, upload_to=common.files.upload.default_upload_to, validators=[common.validators.files.validate_file_size], verbose_name='image')),
            ],
            options={
                'verbose_name': 'race',
                'verbose_name_plural': 'races',
                'ordering': ['-entry_created_at', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_created_at', models.DateTimeField(auto_now_add=True, verbose_name='Entry created at')),
                ('entry_updated_at', models.DateTimeField(auto_now=True, verbose_name='Entry updated at')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('next_game', models.DateTimeField(blank=True, null=True, verbose_name='next session')),
                ('system', models.PositiveSmallIntegerField(choices=[(0, 'pathfinder'), (1, 'dungeons & dragons')], verbose_name='system')),
                ('chat', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='session_set', related_query_name='session', to='chat.chat', verbose_name='chat')),
                ('players', models.ManyToManyField(related_name='session_set', related_query_name='session', through='roleplay.PlayerInSession', to=settings.AUTH_USER_MODEL, verbose_name='players')),
                ('world', models.ForeignKey(limit_choices_to={'site_type': 17}, on_delete=django.db.models.deletion.CASCADE, related_name='session_set', related_query_name='session', to='roleplay.place', verbose_name='world')),
            ],
            options={
                'verbose_name': 'session',
                'verbose_name_plural': 'sessions',
                'ordering': ['-entry_created_at', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RaceUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_created_at', models.DateTimeField(auto_now_add=True, verbose_name='Entry created at')),
                ('entry_updated_at', models.DateTimeField(auto_now=True, verbose_name='Entry updated at')),
                ('is_owner', models.BooleanField(default=False, verbose_name='ownership')),
                ('race', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='m2m_race_set', to='roleplay.race', verbose_name='race')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='m2m_race_set', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'ordering': ['-entry_created_at', 'entry_updated_at'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='race',
            name='users',
            field=models.ManyToManyField(db_index=True, related_name='race_set', through='roleplay.RaceUser', to=settings.AUTH_USER_MODEL, verbose_name='users'),
        ),
        migrations.AddField(
            model_name='playerinsession',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_in_session_set', to='roleplay.session', verbose_name='session'),
        ),
        migrations.AlterUniqueTogether(
            name='playerinsession',
            unique_together={('session', 'player')},
        ),
    ]
